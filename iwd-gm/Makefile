# Makefile.in generated by automake 1.15.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/iwd
pkgincludedir = $(includedir)/iwd
pkglibdir = $(libdir)/iwd
pkglibexecdir = $(libexecdir)/iwd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
libexec_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_5)
noinst_PROGRAMS = $(am__EXEEXT_6) $(am__EXEEXT_9)
am__append_1 = src/iwd
#am__append_2 = sim_hardcoded
#am__append_3 = plugins/sim_hardcoded.c
#am__append_4 = ofono
#am__append_5 = plugins/ofono.c
am__append_6 = src/iwd-dbus.conf
am__append_7 = src/iwd.service
am__append_8 = src/iwd.service
am__append_9 = src/net.connman.iwd.service
am__append_10 = client/iwctl
am__append_11 = monitor/iwmon
#am__append_12 = wired/ead
#am__append_13 = wired/ead-dbus.conf
#am__append_14 = wired/ead.service
#am__append_15 = wired/ead.service
#am__append_16 = wired/net.connman.ead.service
#am__append_17 = tools/hwsim
#am__append_18 = tools/hwsim-dbus.conf
#am__append_19 = tools/test-runner
am__append_20 = unit/test-client
#am__append_21 = $(unit_tests)
TESTS = $(am__EXEEXT_8)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_dbus_data_DATA_DIST) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
ell_libell_internal_la_LIBADD =
am__ell_libell_internal_la_SOURCES_DIST = ell/util.h ell/test.h \
	ell/strv.h ell/utf8.h ell/queue.h ell/hashmap.h ell/string.h \
	ell/settings.h ell/main.h ell/idle.h ell/signal.h \
	ell/timeout.h ell/io.h ell/ringbuf.h ell/log.h ell/plugin.h \
	ell/checksum.h ell/netlink.h ell/genl.h ell/dbus.h \
	ell/dbus-service.h ell/dbus-client.h ell/hwdb.h ell/cipher.h \
	ell/random.h ell/uintset.h ell/base64.h ell/pem.h ell/tls.h \
	ell/uuid.h ell/key.h ell/pkcs5.h ell/file.h ell/dir.h \
	ell/net.h ell/dhcp.h ell/cert.h ell/private.h ell/missing.h \
	ell/util.c ell/test.c ell/strv.c ell/utf8.c ell/queue.c \
	ell/hashmap.c ell/string.c ell/settings.c ell/main.c \
	ell/idle.c ell/signal.c ell/timeout.c ell/io.c ell/ringbuf.c \
	ell/log.c ell/plugin.c ell/checksum.c ell/netlink-private.h \
	ell/netlink.c ell/genl-private.h ell/genl.c ell/dbus-private.h \
	ell/dbus.c ell/dbus-message.c ell/dbus-util.c \
	ell/dbus-service.c ell/dbus-client.c ell/dbus-name-cache.c \
	ell/dbus-filter.c ell/gvariant-private.h ell/gvariant-util.c \
	ell/siphash-private.h ell/siphash.c ell/hwdb.c ell/cipher.c \
	ell/random.c ell/uintset.c ell/base64.c ell/asn1-private.h \
	ell/pem.c ell/tls-private.h ell/tls.c ell/tls-record.c \
	ell/uuid.c ell/key.c ell/pkcs5-private.h ell/pkcs5.c \
	ell/file.c ell/dir.c ell/net.c ell/dhcp-private.h ell/dhcp.c \
	ell/dhcp-transport.c ell/dhcp-lease.c ell/cert-private.h \
	ell/cert.c
am__objects_1 =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_2 = ell/util.lo ell/test.lo \
	ell/strv.lo ell/utf8.lo ell/queue.lo \
	ell/hashmap.lo ell/string.lo \
	ell/settings.lo ell/main.lo ell/idle.lo \
	ell/signal.lo ell/timeout.lo ell/io.lo \
	ell/ringbuf.lo ell/log.lo ell/plugin.lo \
	ell/checksum.lo ell/netlink.lo ell/genl.lo \
	ell/dbus.lo ell/dbus-message.lo \
	ell/dbus-util.lo ell/dbus-service.lo \
	ell/dbus-client.lo ell/dbus-name-cache.lo \
	ell/dbus-filter.lo ell/gvariant-util.lo \
	ell/siphash.lo ell/hwdb.lo ell/cipher.lo \
	ell/random.lo ell/uintset.lo ell/base64.lo \
	ell/pem.lo ell/tls.lo ell/tls-record.lo \
	ell/uuid.lo ell/key.lo ell/pkcs5.lo \
	ell/file.lo ell/dir.lo ell/net.lo \
	ell/dhcp.lo ell/dhcp-transport.lo \
	ell/dhcp-lease.lo ell/cert.lo
am_ell_libell_internal_la_OBJECTS =  \
	$(am__objects_1) $(am__objects_2)
ell_libell_internal_la_OBJECTS = $(am_ell_libell_internal_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_ell_libell_internal_la_rpath =
am__EXEEXT_1 = client/iwctl$(EXEEXT)
am__EXEEXT_2 = monitor/iwmon$(EXEEXT)
#am__EXEEXT_3 = tools/hwsim$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(dbus_busdir)" \
	"$(DESTDIR)$(dbus_datadir)" "$(DESTDIR)$(systemd_unitdir)"
am__EXEEXT_4 = src/iwd$(EXEEXT)
#am__EXEEXT_5 = wired/ead$(EXEEXT)
#am__EXEEXT_6 = tools/test-runner$(EXEEXT)
am__EXEEXT_7 = unit/test-client$(EXEEXT)
am__EXEEXT_8 = unit/test-cmac-aes$(EXEEXT) unit/test-hmac-md5$(EXEEXT) \
	unit/test-hmac-sha1$(EXEEXT) unit/test-hmac-sha256$(EXEEXT) \
	unit/test-prf-sha1$(EXEEXT) unit/test-kdf-sha256$(EXEEXT) \
	unit/test-crypto$(EXEEXT) unit/test-eapol$(EXEEXT) \
	unit/test-mpdu$(EXEEXT) unit/test-ie$(EXEEXT) \
	unit/test-ssid-to-utf8$(EXEEXT) \
	unit/test-ssid-security$(EXEEXT) unit/test-arc4$(EXEEXT) \
	unit/test-wsc$(EXEEXT) unit/test-eap-mschapv2$(EXEEXT) \
	unit/test-eap-sim$(EXEEXT) unit/test-ecc$(EXEEXT) \
	unit/test-sae$(EXEEXT) unit/test-ecdh$(EXEEXT) $(am__EXEEXT_7)
#am__EXEEXT_9 = $(am__EXEEXT_8)
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS)
am__client_iwctl_SOURCES_DIST = client/main.c client/adapter.c \
	client/agent.h client/agent.c client/agent-manager.h \
	client/agent-manager.c client/ad-hoc.c client/ap.c \
	client/command.h client/command.c client/dbus-proxy.h \
	client/dbus-proxy.c client/device.h client/device.c \
	client/display.h client/display.c client/known-networks.c \
	client/network.h client/network.c client/properties.h \
	client/properties.c client/wsc.c client/station.c
am_client_iwctl_OBJECTS = client/main.$(OBJEXT) \
	client/adapter.$(OBJEXT) client/agent.$(OBJEXT) \
	client/agent-manager.$(OBJEXT) \
	client/ad-hoc.$(OBJEXT) client/ap.$(OBJEXT) \
	client/command.$(OBJEXT) \
	client/dbus-proxy.$(OBJEXT) \
	client/device.$(OBJEXT) client/display.$(OBJEXT) \
	client/known-networks.$(OBJEXT) \
	client/network.$(OBJEXT) \
	client/properties.$(OBJEXT) client/wsc.$(OBJEXT) \
	client/station.$(OBJEXT)
client_iwctl_OBJECTS = $(am_client_iwctl_OBJECTS)
am__DEPENDENCIES_1 = ell/libell-internal.la
client_iwctl_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__monitor_iwmon_SOURCES_DIST = monitor/main.c linux/nl80211.h \
	monitor/nlmon.h monitor/nlmon.c monitor/pcap.h monitor/pcap.c \
	monitor/display.h monitor/display.c src/ie.h src/ie.c \
	src/wscutil.h src/wscutil.c src/mpdu.h src/mpdu.c src/util.h \
	src/util.c src/crypto.h src/crypto.c src/watchlist.h \
	src/watchlist.c src/eapolutil.h src/eapolutil.c \
	src/handshake.h src/handshake.c
am_monitor_iwmon_OBJECTS = monitor/main.$(OBJEXT) \
	monitor/nlmon.$(OBJEXT) monitor/pcap.$(OBJEXT) \
	monitor/display.$(OBJEXT) src/ie.$(OBJEXT) \
	src/wscutil.$(OBJEXT) src/mpdu.$(OBJEXT) \
	src/util.$(OBJEXT) src/crypto.$(OBJEXT) \
	src/watchlist.$(OBJEXT) src/eapolutil.$(OBJEXT) \
	src/handshake.$(OBJEXT)
monitor_iwmon_OBJECTS = $(am_monitor_iwmon_OBJECTS)
monitor_iwmon_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__src_iwd_SOURCES_DIST = src/main.c linux/nl80211.h src/iwd.h \
	src/plugin.h src/plugin.c src/netdev.h src/netdev.c \
	src/wiphy.h src/wiphy.c src/device.h src/device.c \
	src/station.h src/station.c src/ie.h src/ie.c src/dbus.h \
	src/dbus.c src/mpdu.h src/mpdu.c src/eapol.h src/eapol.c \
	src/eapolutil.h src/eapolutil.c src/handshake.h \
	src/handshake.c src/scan.h src/scan.c src/common.h \
	src/common.c src/agent.h src/agent.c src/storage.h \
	src/storage.c src/network.h src/network.c src/wsc.c \
	src/backtrace.h src/backtrace.c src/knownnetworks.h \
	src/knownnetworks.c src/rfkill.h src/rfkill.c src/ftutil.h \
	src/ftutil.c src/ap.h src/ap.c src/adhoc.h src/adhoc.c \
	src/sae.h src/sae.c src/nl80211util.h src/nl80211util.c \
	src/ecdh.h src/ecdh.c src/owe.h src/owe.c src/eap.c src/eap.h \
	src/eap-private.h src/eap-wsc.c src/eap-wsc.h src/eap-md5.c \
	src/eap-tls.c src/eap-ttls.c src/eap-mschapv2.c \
	src/eap-mschapv2.h src/eap-sim.c src/eap-aka.c src/eap-peap.c \
	src/eap-gtc.c src/eap-pwd.c src/util.h src/util.c src/crypto.h \
	src/crypto.c src/ecc.h src/ecc.c src/wscutil.h src/wscutil.c \
	src/simutil.h src/simutil.c src/simauth.h src/simauth.c \
	src/watchlist.h src/watchlist.c src/eap-tls-common.h \
	src/eap-tls-common.c src/mschaputil.h src/mschaputil.c \
	plugins/sim_hardcoded.c plugins/ofono.c
am__objects_3 = src/eap.$(OBJEXT) src/eap-wsc.$(OBJEXT) \
	src/eap-md5.$(OBJEXT) src/eap-tls.$(OBJEXT) \
	src/eap-ttls.$(OBJEXT) src/eap-mschapv2.$(OBJEXT) \
	src/eap-sim.$(OBJEXT) src/eap-aka.$(OBJEXT) \
	src/eap-peap.$(OBJEXT) src/eap-gtc.$(OBJEXT) \
	src/eap-pwd.$(OBJEXT) src/util.$(OBJEXT) src/crypto.$(OBJEXT) \
	src/ecc.$(OBJEXT) src/wscutil.$(OBJEXT) src/simutil.$(OBJEXT) \
	src/simauth.$(OBJEXT) src/watchlist.$(OBJEXT) \
	src/eap-tls-common.$(OBJEXT) src/mschaputil.$(OBJEXT)
#am__objects_4 = plugins/sim_hardcoded.$(OBJEXT)
#am__objects_5 = plugins/ofono.$(OBJEXT)
am__objects_6 = $(am__objects_4) $(am__objects_5)
am_src_iwd_OBJECTS = src/main.$(OBJEXT) \
	src/plugin.$(OBJEXT) src/netdev.$(OBJEXT) \
	src/wiphy.$(OBJEXT) src/device.$(OBJEXT) \
	src/station.$(OBJEXT) src/ie.$(OBJEXT) \
	src/dbus.$(OBJEXT) src/mpdu.$(OBJEXT) \
	src/eapol.$(OBJEXT) src/eapolutil.$(OBJEXT) \
	src/handshake.$(OBJEXT) src/scan.$(OBJEXT) \
	src/common.$(OBJEXT) src/agent.$(OBJEXT) \
	src/storage.$(OBJEXT) src/network.$(OBJEXT) \
	src/wsc.$(OBJEXT) src/backtrace.$(OBJEXT) \
	src/knownnetworks.$(OBJEXT) src/rfkill.$(OBJEXT) \
	src/ftutil.$(OBJEXT) src/ap.$(OBJEXT) \
	src/adhoc.$(OBJEXT) src/sae.$(OBJEXT) \
	src/nl80211util.$(OBJEXT) src/ecdh.$(OBJEXT) \
	src/owe.$(OBJEXT) $(am__objects_3) \
	$(am__objects_6)
src_iwd_OBJECTS = $(am_src_iwd_OBJECTS)
am__tools_hwsim_SOURCES_DIST = tools/hwsim.c src/mpdu.h src/util.h \
	src/util.c src/storage.h src/storage.c src/common.h \
	src/common.c
#am_tools_hwsim_OBJECTS = tools/hwsim.$(OBJEXT) \
#	src/util.$(OBJEXT) src/storage.$(OBJEXT) \
#	src/common.$(OBJEXT)
tools_hwsim_OBJECTS = $(am_tools_hwsim_OBJECTS)
#tools_hwsim_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__tools_test_runner_SOURCES_DIST = tools/test-runner.c
#am_tools_test_runner_OBJECTS =  \
#	tools/test-runner.$(OBJEXT)
tools_test_runner_OBJECTS = $(am_tools_test_runner_OBJECTS)
#tools_test_runner_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_arc4_OBJECTS = unit/test-arc4.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_arc4_OBJECTS = $(am_unit_test_arc4_OBJECTS)
unit_test_arc4_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__unit_test_client_SOURCES_DIST = unit/test-client.c \
	client/adapter.c client/agent.h client/agent.c \
	client/agent-manager.h client/agent-manager.c client/command.h \
	client/command.c client/dbus-proxy.h client/dbus-proxy.c \
	client/display.h client/display.c client/network.h \
	client/network.c client/properties.h client/properties.c
am_unit_test_client_OBJECTS = unit/test-client.$(OBJEXT) \
	client/adapter.$(OBJEXT) client/agent.$(OBJEXT) \
	client/agent-manager.$(OBJEXT) \
	client/command.$(OBJEXT) \
	client/dbus-proxy.$(OBJEXT) \
	client/display.$(OBJEXT) client/network.$(OBJEXT) \
	client/properties.$(OBJEXT)
unit_test_client_OBJECTS = $(am_unit_test_client_OBJECTS)
unit_test_client_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_cmac_aes_OBJECTS = unit/test-cmac-aes.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_cmac_aes_OBJECTS = $(am_unit_test_cmac_aes_OBJECTS)
unit_test_cmac_aes_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_crypto_OBJECTS = unit/test-crypto.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_crypto_OBJECTS = $(am_unit_test_crypto_OBJECTS)
unit_test_crypto_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_eap_mschapv2_OBJECTS = src/eap-mschapv2.$(OBJEXT) \
	src/eap.$(OBJEXT) unit/test-eap-mschapv2.$(OBJEXT)
unit_test_eap_mschapv2_OBJECTS = $(am_unit_test_eap_mschapv2_OBJECTS)
unit_test_eap_mschapv2_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_eap_sim_OBJECTS = unit/test-eap-sim.$(OBJEXT) \
	src/crypto.$(OBJEXT) src/simutil.$(OBJEXT) src/ie.$(OBJEXT) \
	src/watchlist.$(OBJEXT) src/eapol.$(OBJEXT) \
	src/eapolutil.$(OBJEXT) src/handshake.$(OBJEXT) \
	src/eap.$(OBJEXT) src/util.$(OBJEXT) src/simauth.$(OBJEXT) \
	src/eap-sim.$(OBJEXT)
unit_test_eap_sim_OBJECTS = $(am_unit_test_eap_sim_OBJECTS)
unit_test_eap_sim_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_eapol_OBJECTS = unit/test-eapol.$(OBJEXT) \
	src/crypto.$(OBJEXT) src/ie.$(OBJEXT) src/watchlist.$(OBJEXT) \
	src/eapol.$(OBJEXT) src/eapolutil.$(OBJEXT) \
	src/handshake.$(OBJEXT) src/eap.$(OBJEXT) \
	src/eap-tls.$(OBJEXT) src/eap-ttls.$(OBJEXT) \
	src/eap-md5.$(OBJEXT) src/util.$(OBJEXT) \
	src/eap-tls-common.$(OBJEXT) src/mschaputil.$(OBJEXT)
unit_test_eapol_OBJECTS = $(am_unit_test_eapol_OBJECTS)
unit_test_eapol_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_ecc_OBJECTS = unit/test-ecc.$(OBJEXT) src/ecc.$(OBJEXT)
unit_test_ecc_OBJECTS = $(am_unit_test_ecc_OBJECTS)
unit_test_ecc_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_ecdh_OBJECTS = unit/test-ecdh.$(OBJEXT) \
	src/ecdh.$(OBJEXT) src/ecc.$(OBJEXT)
unit_test_ecdh_OBJECTS = $(am_unit_test_ecdh_OBJECTS)
unit_test_ecdh_DEPENDENCIES = $(am__DEPENDENCIES_1)
unit_test_ecdh_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(unit_test_ecdh_LDFLAGS) $(LDFLAGS) -o \
	$@
am_unit_test_hmac_md5_OBJECTS = unit/test-hmac-md5.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_hmac_md5_OBJECTS = $(am_unit_test_hmac_md5_OBJECTS)
unit_test_hmac_md5_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_hmac_sha1_OBJECTS = unit/test-hmac-sha1.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_hmac_sha1_OBJECTS = $(am_unit_test_hmac_sha1_OBJECTS)
unit_test_hmac_sha1_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_hmac_sha256_OBJECTS = unit/test-hmac-sha256.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_hmac_sha256_OBJECTS = $(am_unit_test_hmac_sha256_OBJECTS)
unit_test_hmac_sha256_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_ie_OBJECTS = unit/test-ie.$(OBJEXT) src/ie.$(OBJEXT)
unit_test_ie_OBJECTS = $(am_unit_test_ie_OBJECTS)
unit_test_ie_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_kdf_sha256_OBJECTS = unit/test-kdf-sha256.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_kdf_sha256_OBJECTS = $(am_unit_test_kdf_sha256_OBJECTS)
unit_test_kdf_sha256_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_mpdu_OBJECTS = unit/test-mpdu.$(OBJEXT) \
	src/mpdu.$(OBJEXT) src/ie.$(OBJEXT)
unit_test_mpdu_OBJECTS = $(am_unit_test_mpdu_OBJECTS)
unit_test_mpdu_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_prf_sha1_OBJECTS = unit/test-prf-sha1.$(OBJEXT) \
	src/crypto.$(OBJEXT)
unit_test_prf_sha1_OBJECTS = $(am_unit_test_prf_sha1_OBJECTS)
unit_test_prf_sha1_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_sae_OBJECTS = unit/test-sae.$(OBJEXT) src/sae.$(OBJEXT) \
	src/crypto.$(OBJEXT) src/ie.$(OBJEXT) src/handshake.$(OBJEXT) \
	src/util.$(OBJEXT) src/ecc.$(OBJEXT)
unit_test_sae_OBJECTS = $(am_unit_test_sae_OBJECTS)
unit_test_sae_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_ssid_security_OBJECTS =  \
	unit/test-ssid-security.$(OBJEXT) src/ie.$(OBJEXT) \
	src/common.$(OBJEXT)
unit_test_ssid_security_OBJECTS =  \
	$(am_unit_test_ssid_security_OBJECTS)
unit_test_ssid_security_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_ssid_to_utf8_OBJECTS = src/util.$(OBJEXT) \
	unit/test-ssid-to-utf8.$(OBJEXT)
unit_test_ssid_to_utf8_OBJECTS = $(am_unit_test_ssid_to_utf8_OBJECTS)
unit_test_ssid_to_utf8_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_unit_test_wsc_OBJECTS = unit/test-wsc.$(OBJEXT) \
	src/wscutil.$(OBJEXT) src/crypto.$(OBJEXT) src/ie.$(OBJEXT) \
	src/watchlist.$(OBJEXT) src/eapol.$(OBJEXT) \
	src/eapolutil.$(OBJEXT) src/handshake.$(OBJEXT) \
	src/eap.$(OBJEXT) src/util.$(OBJEXT) src/eap-wsc.$(OBJEXT)
unit_test_wsc_OBJECTS = $(am_unit_test_wsc_OBJECTS)
unit_test_wsc_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__wired_ead_SOURCES_DIST = wired/main.c wired/ethdev.h \
	wired/ethdev.c wired/network.h wired/network.c wired/dbus.h \
	wired/dbus.c src/eap.c src/eap.h src/eap-private.h \
	src/eap-wsc.c src/eap-wsc.h src/eap-md5.c src/eap-tls.c \
	src/eap-ttls.c src/eap-mschapv2.c src/eap-mschapv2.h \
	src/eap-sim.c src/eap-aka.c src/eap-peap.c src/eap-gtc.c \
	src/eap-pwd.c src/util.h src/util.c src/crypto.h src/crypto.c \
	src/ecc.h src/ecc.c src/wscutil.h src/wscutil.c src/simutil.h \
	src/simutil.c src/simauth.h src/simauth.c src/watchlist.h \
	src/watchlist.c src/eap-tls-common.h src/eap-tls-common.c \
	src/mschaputil.h src/mschaputil.c
#am_wired_ead_OBJECTS = wired/main.$(OBJEXT) \
#	wired/ethdev.$(OBJEXT) wired/network.$(OBJEXT) \
#	wired/dbus.$(OBJEXT) $(am__objects_3)
wired_ead_OBJECTS = $(am_wired_ead_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC)  $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile  $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(ell_libell_internal_la_SOURCES) $(client_iwctl_SOURCES) \
	$(monitor_iwmon_SOURCES) $(src_iwd_SOURCES) \
	$(tools_hwsim_SOURCES) $(tools_test_runner_SOURCES) \
	$(unit_test_arc4_SOURCES) $(unit_test_client_SOURCES) \
	$(unit_test_cmac_aes_SOURCES) $(unit_test_crypto_SOURCES) \
	$(unit_test_eap_mschapv2_SOURCES) $(unit_test_eap_sim_SOURCES) \
	$(unit_test_eapol_SOURCES) $(unit_test_ecc_SOURCES) \
	$(unit_test_ecdh_SOURCES) $(unit_test_hmac_md5_SOURCES) \
	$(unit_test_hmac_sha1_SOURCES) \
	$(unit_test_hmac_sha256_SOURCES) $(unit_test_ie_SOURCES) \
	$(unit_test_kdf_sha256_SOURCES) $(unit_test_mpdu_SOURCES) \
	$(unit_test_prf_sha1_SOURCES) $(unit_test_sae_SOURCES) \
	$(unit_test_ssid_security_SOURCES) \
	$(unit_test_ssid_to_utf8_SOURCES) $(unit_test_wsc_SOURCES) \
	$(wired_ead_SOURCES)
DIST_SOURCES = $(am__ell_libell_internal_la_SOURCES_DIST) \
	$(am__client_iwctl_SOURCES_DIST) \
	$(am__monitor_iwmon_SOURCES_DIST) $(am__src_iwd_SOURCES_DIST) \
	$(am__tools_hwsim_SOURCES_DIST) \
	$(am__tools_test_runner_SOURCES_DIST) \
	$(unit_test_arc4_SOURCES) $(am__unit_test_client_SOURCES_DIST) \
	$(unit_test_cmac_aes_SOURCES) $(unit_test_crypto_SOURCES) \
	$(unit_test_eap_mschapv2_SOURCES) $(unit_test_eap_sim_SOURCES) \
	$(unit_test_eapol_SOURCES) $(unit_test_ecc_SOURCES) \
	$(unit_test_ecdh_SOURCES) $(unit_test_hmac_md5_SOURCES) \
	$(unit_test_hmac_sha1_SOURCES) \
	$(unit_test_hmac_sha256_SOURCES) $(unit_test_ie_SOURCES) \
	$(unit_test_kdf_sha256_SOURCES) $(unit_test_mpdu_SOURCES) \
	$(unit_test_prf_sha1_SOURCES) $(unit_test_sae_SOURCES) \
	$(unit_test_ssid_security_SOURCES) \
	$(unit_test_ssid_to_utf8_SOURCES) $(unit_test_wsc_SOURCES) \
	$(am__wired_ead_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
am__dist_dbus_data_DATA_DIST = src/iwd-dbus.conf wired/ead-dbus.conf \
	tools/hwsim-dbus.conf
DATA = $(dbus_bus_DATA) $(dist_dbus_data_DATA) $(noinst_DATA) \
	$(systemd_unit_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing \
	$(top_srcdir)/build-aux/test-driver AUTHORS COPYING ChangeLog \
	INSTALL README TODO build-aux/compile build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.xz
DIST_TARGETS = dist-xz
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
A2X = 
ACLOCAL = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/missing automake-1.15
AWK = mawk
CC = /home/parallels/afl/afl-gcc 
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall -O2 -fsigned-char -fno-exceptions -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
#CFLAGS = -fno-stack-protector -D_FORTIFY_SOURCE=0
CPP = /home/parallels/afl/afl-gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DBUS_BUSDIR = /usr/share/dbus-1/system-services
DBUS_DATADIR = /usr/share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ELL_CFLAGS = 
ELL_LIBS = 
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/local/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/local/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = iwd
PACKAGE_BUGREPORT = 
PACKAGE_NAME = iwd
PACKAGE_STRING = iwd 0.12
PACKAGE_TARNAME = iwd
PACKAGE_URL = 
PACKAGE_VERSION = 0.12
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SYSTEMD_UNITDIR = /lib/systemd/system
VERSION = 0.12
abs_builddir = /home/parallels/Documents/Thesis/iwd-gm
abs_srcdir = /home/parallels/Documents/Thesis/iwd-gm
abs_top_builddir = /home/parallels/Documents/Thesis/iwd-gm
abs_top_srcdir = /home/parallels/Documents/Thesis/iwd-gm
ac_ct_AR = ar
ac_ct_CC = /home/parallels/afl/afl-gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/parallels/Documents/Thesis/iwd-gm/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AM_MAKEFLAGS = --no-print-directory
ACLOCAL_AMFLAGS = -I build-aux
builtin_modules = $(am__append_2) $(am__append_4)
builtin_sources = $(am__append_3) $(am__append_5)
ell_cflags = 
#ell_cflags = 
ell_ldadd = ell/libell-internal.la
#ell_ldadd = 
ell_dependencies = $(ell_ldadd)
#ell_dependencies = 
ell_built_sources = ell/internal ell/ell.h
#ell_built_sources = 
noinst_LTLIBRARIES = ell/libell-internal.la
ell_headers = ell/util.h \
			ell/test.h \
			ell/strv.h \
			ell/utf8.h \
			ell/queue.h \
			ell/hashmap.h \
			ell/string.h \
			ell/settings.h \
			ell/main.h \
			ell/idle.h \
			ell/signal.h \
			ell/timeout.h \
			ell/io.h \
			ell/ringbuf.h \
			ell/log.h \
			ell/plugin.h \
			ell/checksum.h \
			ell/netlink.h \
			ell/genl.h \
			ell/dbus.h \
			ell/dbus-service.h \
			ell/dbus-client.h \
			ell/hwdb.h \
			ell/cipher.h \
			ell/random.h \
			ell/uintset.h \
			ell/base64.h \
			ell/pem.h \
			ell/tls.h \
			ell/uuid.h \
			ell/key.h \
			ell/pkcs5.h \
			ell/file.h \
			ell/dir.h \
			ell/net.h \
			ell/dhcp.h \
			ell/cert.h

ell_sources = ell/private.h \
			ell/missing.h \
			ell/util.c \
			ell/test.c \
			ell/strv.c \
			ell/utf8.c \
			ell/queue.c \
			ell/hashmap.c \
			ell/string.c \
			ell/settings.c \
			ell/main.c \
			ell/idle.c \
			ell/signal.c \
			ell/timeout.c \
			ell/io.c \
			ell/ringbuf.c \
			ell/log.c \
			ell/plugin.c \
			ell/checksum.c \
			ell/netlink-private.h \
			ell/netlink.c \
			ell/genl-private.h \
			ell/genl.c \
			ell/dbus-private.h \
			ell/dbus.c \
			ell/dbus-message.c \
			ell/dbus-util.c \
			ell/dbus-service.c \
			ell/dbus-client.c \
			ell/dbus-name-cache.c \
			ell/dbus-filter.c \
			ell/gvariant-private.h \
			ell/gvariant-util.c \
			ell/siphash-private.h \
			ell/siphash.c \
			ell/hwdb.c \
			ell/cipher.c \
			ell/random.c \
			ell/uintset.c \
			ell/base64.c \
			ell/asn1-private.h \
			ell/pem.c \
			ell/tls-private.h \
			ell/tls.c \
			ell/tls-record.c \
			ell/uuid.c \
			ell/key.c \
			ell/pkcs5-private.h \
			ell/pkcs5.c \
			ell/file.c \
			ell/dir.c \
			ell/net.c \
			ell/dhcp-private.h \
			ell/dhcp.c \
			ell/dhcp-transport.c \
			ell/dhcp-lease.c \
			ell/cert-private.h \
			ell/cert.c

ell_libell_internal_la_SOURCES = $(ell_headers) $(ell_sources)
dbus_datadir = /usr/share/dbus-1/system.d
dist_dbus_data_DATA = $(am__append_6) \
	$(am__append_13) $(am__append_18)
systemd_unitdir = /lib/systemd/system
systemd_unit_DATA = $(am__append_8) \
	$(am__append_15)
dbus_busdir = /usr/share/dbus-1/system-services
dbus_bus_DATA = $(am__append_9) $(am__append_16)
eap_sources = src/eap.c src/eap.h src/eap-private.h \
				src/eap-wsc.c src/eap-wsc.h \
				src/eap-md5.c \
				src/eap-tls.c \
				src/eap-ttls.c \
				src/eap-mschapv2.c src/eap-mschapv2.h \
				src/eap-sim.c \
				src/eap-aka.c \
				src/eap-peap.c \
				src/eap-gtc.c \
				src/eap-pwd.c \
				src/util.h src/util.c \
				src/crypto.h src/crypto.c \
				src/ecc.h src/ecc.c \
				src/wscutil.h src/wscutil.c \
				src/simutil.h src/simutil.c \
				src/simauth.h src/simauth.c \
				src/watchlist.h src/watchlist.c \
				src/eap-tls-common.h src/eap-tls-common.c \
				src/mschaputil.h src/mschaputil.c

src_iwd_SOURCES = src/main.c linux/nl80211.h src/iwd.h \
					src/plugin.h src/plugin.c \
					src/netdev.h src/netdev.c \
					src/wiphy.h src/wiphy.c \
					src/device.h src/device.c \
					src/station.h src/station.c \
					src/ie.h src/ie.c \
					src/dbus.h src/dbus.c \
					src/mpdu.h src/mpdu.c \
					src/eapol.h src/eapol.c \
					src/eapolutil.h src/eapolutil.c \
					src/handshake.h src/handshake.c \
					src/scan.h src/scan.c \
					src/common.h src/common.c \
					src/agent.h src/agent.c \
					src/storage.h src/storage.c \
					src/network.h src/network.c \
					src/wsc.c \
					src/backtrace.h src/backtrace.c \
					src/knownnetworks.h \
					src/knownnetworks.c \
					src/rfkill.h src/rfkill.c \
					src/ftutil.h src/ftutil.c \
					src/ap.h src/ap.c \
					src/adhoc.h src/adhoc.c \
					src/sae.h src/sae.c \
					src/nl80211util.h src/nl80211util.c \
					src/ecdh.h src/ecdh.c \
					src/owe.h src/owe.c \
					$(eap_sources) \
					$(builtin_sources)

src_iwd_LDADD = $(ell_ldadd) -ldl
src_iwd_DEPENDENCIES = $(ell_dependencies) \
	$(am__append_7)
client_iwctl_SOURCES = client/main.c \
			client/adapter.c \
			client/agent.h client/agent.c \
			client/agent-manager.h client/agent-manager.c \
			client/ad-hoc.c \
			client/ap.c \
			client/command.h client/command.c \
			client/dbus-proxy.h client/dbus-proxy.c \
			client/device.h client/device.c \
			client/display.h client/display.c \
			client/known-networks.c \
			client/network.h client/network.c \
			client/properties.h client/properties.c \
			client/wsc.c client/station.c

client_iwctl_LDADD = $(ell_ldadd) -lreadline
monitor_iwmon_SOURCES = monitor/main.c linux/nl80211.h \
					monitor/nlmon.h monitor/nlmon.c \
					monitor/pcap.h monitor/pcap.c \
					monitor/display.h monitor/display.c \
					src/ie.h src/ie.c \
					src/wscutil.h src/wscutil.c \
					src/mpdu.h src/mpdu.c \
					src/util.h src/util.c \
					src/crypto.h src/crypto.c \
					src/watchlist.h src/watchlist.c \
					src/eapolutil.h src/eapolutil.c \
					src/handshake.h src/handshake.c

monitor_iwmon_LDADD = $(ell_ldadd)
#wired_ead_SOURCES = wired/main.c wired/ethdev.h wired/ethdev.c \
#				wired/network.h wired/network.c \
#				wired/dbus.h wired/dbus.c $(eap_sources)

#wired_ead_LDADD = $(ell_ldadd)
#wired_ead_DEPENDENCIES = $(ell_dependencies) \
#	$(am__append_14)
#tools_hwsim_SOURCES = tools/hwsim.c src/mpdu.h \
#					src/util.h src/util.c \
#					src/storage.h src/storage.c \
#					src/common.h src/common.c

#tools_hwsim_LDADD = $(ell_ldadd)
#tools_test_runner_SOURCES = tools/test-runner.c
#tools_test_runner_LDADD = $(ell_ldadd)
unit_tests = unit/test-cmac-aes unit/test-hmac-md5 unit/test-hmac-sha1 \
	unit/test-hmac-sha256 unit/test-prf-sha1 unit/test-kdf-sha256 \
	unit/test-crypto unit/test-eapol unit/test-mpdu unit/test-ie \
	unit/test-ssid-to-utf8 unit/test-ssid-security unit/test-arc4 \
	unit/test-wsc unit/test-eap-mschapv2 unit/test-eap-sim \
	unit/test-ecc unit/test-sae unit/test-ecdh $(am__append_20)
ell_pem_files = cert-ca-key.pem cert-client-key.pem cert-client-key-pkcs8.pem \
		cert-server-key.pem cert-server-key-pkcs8.pem \
		cert-ca.pem cert-client.pem cert-server.pem

#noinst_DATA = ell/unit/test_data
unit_test_eap_sim_SOURCES = unit/test-eap-sim.c \
		src/crypto.h src/crypto.c src/simutil.h src/simutil.c \
		src/ie.h src/ie.c \
		src/watchlist.h src/watchlist.c \
		src/eapol.h src/eapol.c \
		src/eapolutil.h src/eapolutil.c \
		src/handshake.h src/handshake.c \
		src/eap.h src/eap.c src/eap-private.h \
		src/util.h src/util.c \
		src/simauth.h src/simauth.c \
		src/eap-sim.c

unit_test_eap_sim_LDADD = $(ell_ldadd)
unit_test_cmac_aes_SOURCES = unit/test-cmac-aes.c \
					src/crypto.h src/crypto.c

unit_test_cmac_aes_LDADD = $(ell_ldadd)
unit_test_arc4_SOURCES = unit/test-arc4.c \
					src/crypto.h src/crypto.c

unit_test_arc4_LDADD = $(ell_ldadd)
unit_test_hmac_md5_SOURCES = unit/test-hmac-md5.c \
					src/crypto.h src/crypto.c

unit_test_hmac_md5_LDADD = $(ell_ldadd)
unit_test_hmac_sha1_SOURCES = unit/test-hmac-sha1.c \
					src/crypto.h src/crypto.c

unit_test_hmac_sha1_LDADD = $(ell_ldadd)
unit_test_hmac_sha256_SOURCES = unit/test-hmac-sha256.c \
					src/crypto.h src/crypto.c

unit_test_hmac_sha256_LDADD = $(ell_ldadd)
unit_test_prf_sha1_SOURCES = unit/test-prf-sha1.c \
					src/crypto.h src/crypto.c

unit_test_prf_sha1_LDADD = $(ell_ldadd)
unit_test_kdf_sha256_SOURCES = unit/test-kdf-sha256.c \
					src/crypto.h src/crypto.c

unit_test_kdf_sha256_LDADD = $(ell_ldadd)
unit_test_ie_SOURCES = unit/test-ie.c src/ie.h src/ie.c
unit_test_ie_LDADD = $(ell_ldadd)
unit_test_crypto_SOURCES = unit/test-crypto.c \
				src/crypto.h src/crypto.c

unit_test_crypto_LDADD = $(ell_ldadd)
unit_test_mpdu_SOURCES = unit/test-mpdu.c \
				src/mpdu.h src/mpdu.c \
				src/ie.h src/ie.c

unit_test_mpdu_LDADD = $(ell_ldadd)
unit_test_eapol_SOURCES = unit/test-eapol.c \
				src/crypto.h src/crypto.c \
				src/ie.h src/ie.c \
				src/watchlist.h src/watchlist.c \
				src/eapol.h src/eapol.c \
				src/eapolutil.h src/eapolutil.c \
				src/handshake.h src/handshake.c \
				src/eap.h src/eap.c src/eap-private.h \
				src/eap-tls.c src/eap-ttls.c \
				src/eap-md5.c src/util.c \
				src/eap-tls-common.h src/eap-tls-common.c \
				src/mschaputil.h src/mschaputil.c

unit_test_eapol_LDADD = $(ell_ldadd)
unit_test_ssid_to_utf8_SOURCES = src/util.h src/util.c \
				unit/test-ssid-to-utf8.c

unit_test_ssid_to_utf8_LDADD = $(ell_ldadd)
unit_test_ssid_security_SOURCES = unit/test-ssid-security.c src/ie.h src/ie.c \
				src/common.h src/common.c

unit_test_ssid_security_LDADD = $(ell_ldadd)
unit_test_wsc_SOURCES = unit/test-wsc.c src/wscutil.h src/wscutil.c \
				src/crypto.h src/crypto.c \
				src/ie.h src/ie.c \
				src/watchlist.h src/watchlist.c \
				src/eapol.h src/eapol.c \
				src/eapolutil.h src/eapolutil.c \
				src/handshake.h src/handshake.c \
				src/eap.h src/eap.c src/eap-private.h \
				src/util.h src/util.c \
				src/eap-wsc.h src/eap-wsc.c

unit_test_wsc_LDADD = $(ell_ldadd)
unit_test_eap_mschapv2_SOURCES = src/eap-mschapv2.h src/eap-mschapv2.c \
				src/eap.c src/eap.h src/eap-private.h \
				unit/test-eap-mschapv2.c

unit_test_eap_mschapv2_LDADD = $(ell_ldadd)
unit_test_client_SOURCES = unit/test-client.c \
				client/adapter.c \
				client/agent.h client/agent.c \
				client/agent-manager.h client/agent-manager.c \
				client/command.h client/command.c \
				client/dbus-proxy.h client/dbus-proxy.c \
				client/display.h client/display.c \
				client/network.h client/network.c \
				client/properties.h client/properties.c

unit_test_client_LDADD = $(ell_ldadd) -lreadline
unit_test_ecc_SOURCES = unit/test-ecc.c src/ecc.c src/ecc.h
unit_test_ecc_LDADD = $(ell_ldadd)
unit_test_sae_SOURCES = unit/test-sae.c \
				src/sae.h src/sae.c \
				src/crypto.h src/crypto.c \
				src/ie.h src/ie.c \
				src/handshake.h src/handshake.c \
				src/util.h src/util.c \
				src/ecc.h src/ecc.c

unit_test_sae_LDADD = $(ell_ldadd)
unit_test_ecdh_SOURCES = unit/test-ecdh.c \
				src/ecdh.h src/ecdh.c \
				src/ecc.h src/ecc.c

unit_test_ecdh_LDADD = $(ell_ldadd)
unit_test_ecdh_LDFLAGS = -Wl,-wrap,l_getrandom
manual_pages = doc/iwmon.1
#dist_man_MANS = $(manual_pages)
EXTRA_DIST = src/genbuiltin src/iwd.service.in src/net.connman.iwd.service \
			wired/ead.service.in wired/net.connman.ead.service \
			doc/main.conf $(manual_pages:.1=.txt)

AM_CFLAGS = $(ell_cflags) -fvisibility=hidden
CLEANFILES = src/iwd.service wired/ead.service
DISTCHECK_CONFIGURE_FLAGS = --disable-dbus-policy --disable-systemd-service \
				--enable-sim-hardcoded \
				--enable-ofono \
				--enable-wired \
				--enable-hwsim \
				--enable-tools

DISTCLEANFILES = $(BUILT_SOURCES) $(unit_tests) $(manual_pages)
MAINTAINERCLEANFILES = Makefile.in configure config.h.in aclocal.m4
BUILT_SOURCES = $(ell_built_sources) src/builtin.h
SED_PROCESS = $(AM_V_GEN)$(MKDIR_P) $(dir $@) && \
		$(SED) -e 's,@libexecdir\@,$(libexecdir),g' \
		< $< > $@

all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
ell/$(am__dirstamp):
	@$(MKDIR_P) ell
	@: > ell/$(am__dirstamp)
ell/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ell/$(DEPDIR)
	@: > ell/$(DEPDIR)/$(am__dirstamp)
ell/util.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/test.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/strv.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/utf8.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/queue.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/hashmap.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/string.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/settings.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/main.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/idle.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/signal.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/timeout.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/io.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/ringbuf.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/log.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/plugin.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/checksum.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/netlink.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/genl.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-message.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-util.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-service.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-client.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-name-cache.lo: ell/$(am__dirstamp) \
	ell/$(DEPDIR)/$(am__dirstamp)
ell/dbus-filter.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/gvariant-util.lo: ell/$(am__dirstamp) \
	ell/$(DEPDIR)/$(am__dirstamp)
ell/siphash.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/hwdb.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/cipher.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/random.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/uintset.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/base64.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/pem.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/tls.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/tls-record.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/uuid.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/key.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/pkcs5.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/file.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dir.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/net.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dhcp.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/dhcp-transport.lo: ell/$(am__dirstamp) \
	ell/$(DEPDIR)/$(am__dirstamp)
ell/dhcp-lease.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)
ell/cert.lo: ell/$(am__dirstamp) ell/$(DEPDIR)/$(am__dirstamp)

ell/libell-internal.la: $(ell_libell_internal_la_OBJECTS) $(ell_libell_internal_la_DEPENDENCIES) $(EXTRA_ell_libell_internal_la_DEPENDENCIES) ell/$(am__dirstamp)
	$(AM_V_CCLD)$(LINK) $(am_ell_libell_internal_la_rpath) $(ell_libell_internal_la_OBJECTS) $(ell_libell_internal_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && rm -f $$files

clean-libexecPROGRAMS:
	@list='$(libexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
client/$(am__dirstamp):
	@$(MKDIR_P) client
	@: > client/$(am__dirstamp)
client/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) client/$(DEPDIR)
	@: > client/$(DEPDIR)/$(am__dirstamp)
client/main.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/adapter.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/agent.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/agent-manager.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/ad-hoc.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/ap.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/command.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/dbus-proxy.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/device.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/display.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/known-networks.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/network.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/properties.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/wsc.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)
client/station.$(OBJEXT): client/$(am__dirstamp) \
	client/$(DEPDIR)/$(am__dirstamp)

client/iwctl$(EXEEXT): $(client_iwctl_OBJECTS) $(client_iwctl_DEPENDENCIES) $(EXTRA_client_iwctl_DEPENDENCIES) client/$(am__dirstamp)
	@rm -f client/iwctl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(client_iwctl_OBJECTS) $(client_iwctl_LDADD) $(LIBS)
monitor/$(am__dirstamp):
	@$(MKDIR_P) monitor
	@: > monitor/$(am__dirstamp)
monitor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) monitor/$(DEPDIR)
	@: > monitor/$(DEPDIR)/$(am__dirstamp)
monitor/main.$(OBJEXT): monitor/$(am__dirstamp) \
	monitor/$(DEPDIR)/$(am__dirstamp)
monitor/nlmon.$(OBJEXT): monitor/$(am__dirstamp) \
	monitor/$(DEPDIR)/$(am__dirstamp)
monitor/pcap.$(OBJEXT): monitor/$(am__dirstamp) \
	monitor/$(DEPDIR)/$(am__dirstamp)
monitor/display.$(OBJEXT): monitor/$(am__dirstamp) \
	monitor/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/ie.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/wscutil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/mpdu.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/util.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/crypto.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/watchlist.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eapolutil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/handshake.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

monitor/iwmon$(EXEEXT): $(monitor_iwmon_OBJECTS) $(monitor_iwmon_DEPENDENCIES) $(EXTRA_monitor_iwmon_DEPENDENCIES) monitor/$(am__dirstamp)
	@rm -f monitor/iwmon$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(monitor_iwmon_OBJECTS) $(monitor_iwmon_LDADD) $(LIBS)
src/main.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/plugin.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/netdev.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/wiphy.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/device.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/station.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dbus.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/eapol.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/scan.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/common.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/agent.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/storage.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/network.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/wsc.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/backtrace.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/knownnetworks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rfkill.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ftutil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ap.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/adhoc.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/sae.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/nl80211util.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ecdh.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/owe.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/eap.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/eap-wsc.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-md5.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-tls.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-ttls.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-mschapv2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-sim.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-aka.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-peap.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-gtc.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-pwd.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ecc.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/simutil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/simauth.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/eap-tls-common.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/mschaputil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
plugins/$(am__dirstamp):
	@$(MKDIR_P) plugins
	@: > plugins/$(am__dirstamp)
plugins/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plugins/$(DEPDIR)
	@: > plugins/$(DEPDIR)/$(am__dirstamp)
plugins/sim_hardcoded.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/ofono.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)

src/iwd$(EXEEXT): $(src_iwd_OBJECTS) $(src_iwd_DEPENDENCIES) $(EXTRA_src_iwd_DEPENDENCIES) src/$(am__dirstamp)
	@rm -f src/iwd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_iwd_OBJECTS) $(src_iwd_LDADD) $(LIBS)
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/hwsim.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

tools/hwsim$(EXEEXT): $(tools_hwsim_OBJECTS) $(tools_hwsim_DEPENDENCIES) $(EXTRA_tools_hwsim_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/hwsim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_hwsim_OBJECTS) $(tools_hwsim_LDADD) $(LIBS)
tools/test-runner.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

tools/test-runner$(EXEEXT): $(tools_test_runner_OBJECTS) $(tools_test_runner_DEPENDENCIES) $(EXTRA_tools_test_runner_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/test-runner$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_test_runner_OBJECTS) $(tools_test_runner_LDADD) $(LIBS)
unit/$(am__dirstamp):
	@$(MKDIR_P) unit
	@: > unit/$(am__dirstamp)
unit/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unit/$(DEPDIR)
	@: > unit/$(DEPDIR)/$(am__dirstamp)
unit/test-arc4.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-arc4$(EXEEXT): $(unit_test_arc4_OBJECTS) $(unit_test_arc4_DEPENDENCIES) $(EXTRA_unit_test_arc4_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-arc4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_arc4_OBJECTS) $(unit_test_arc4_LDADD) $(LIBS)
unit/test-client.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-client$(EXEEXT): $(unit_test_client_OBJECTS) $(unit_test_client_DEPENDENCIES) $(EXTRA_unit_test_client_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-client$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_client_OBJECTS) $(unit_test_client_LDADD) $(LIBS)
unit/test-cmac-aes.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-cmac-aes$(EXEEXT): $(unit_test_cmac_aes_OBJECTS) $(unit_test_cmac_aes_DEPENDENCIES) $(EXTRA_unit_test_cmac_aes_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-cmac-aes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_cmac_aes_OBJECTS) $(unit_test_cmac_aes_LDADD) $(LIBS)
unit/test-crypto.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-crypto$(EXEEXT): $(unit_test_crypto_OBJECTS) $(unit_test_crypto_DEPENDENCIES) $(EXTRA_unit_test_crypto_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-crypto$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_crypto_OBJECTS) $(unit_test_crypto_LDADD) $(LIBS)
unit/test-eap-mschapv2.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-eap-mschapv2$(EXEEXT): $(unit_test_eap_mschapv2_OBJECTS) $(unit_test_eap_mschapv2_DEPENDENCIES) $(EXTRA_unit_test_eap_mschapv2_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-eap-mschapv2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_eap_mschapv2_OBJECTS) $(unit_test_eap_mschapv2_LDADD) $(LIBS)
unit/test-eap-sim.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-eap-sim$(EXEEXT): $(unit_test_eap_sim_OBJECTS) $(unit_test_eap_sim_DEPENDENCIES) $(EXTRA_unit_test_eap_sim_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-eap-sim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_eap_sim_OBJECTS) $(unit_test_eap_sim_LDADD) $(LIBS)
unit/test-eapol.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-eapol$(EXEEXT): $(unit_test_eapol_OBJECTS) $(unit_test_eapol_DEPENDENCIES) $(EXTRA_unit_test_eapol_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-eapol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_eapol_OBJECTS) $(unit_test_eapol_LDADD) $(LIBS)
unit/test-ecc.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ecc$(EXEEXT): $(unit_test_ecc_OBJECTS) $(unit_test_ecc_DEPENDENCIES) $(EXTRA_unit_test_ecc_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ecc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ecc_OBJECTS) $(unit_test_ecc_LDADD) $(LIBS)
unit/test-ecdh.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ecdh$(EXEEXT): $(unit_test_ecdh_OBJECTS) $(unit_test_ecdh_DEPENDENCIES) $(EXTRA_unit_test_ecdh_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ecdh$(EXEEXT)
	$(AM_V_CCLD)$(unit_test_ecdh_LINK) $(unit_test_ecdh_OBJECTS) $(unit_test_ecdh_LDADD) $(LIBS)
unit/test-hmac-md5.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-hmac-md5$(EXEEXT): $(unit_test_hmac_md5_OBJECTS) $(unit_test_hmac_md5_DEPENDENCIES) $(EXTRA_unit_test_hmac_md5_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-hmac-md5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_hmac_md5_OBJECTS) $(unit_test_hmac_md5_LDADD) $(LIBS)
unit/test-hmac-sha1.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-hmac-sha1$(EXEEXT): $(unit_test_hmac_sha1_OBJECTS) $(unit_test_hmac_sha1_DEPENDENCIES) $(EXTRA_unit_test_hmac_sha1_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-hmac-sha1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_hmac_sha1_OBJECTS) $(unit_test_hmac_sha1_LDADD) $(LIBS)
unit/test-hmac-sha256.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-hmac-sha256$(EXEEXT): $(unit_test_hmac_sha256_OBJECTS) $(unit_test_hmac_sha256_DEPENDENCIES) $(EXTRA_unit_test_hmac_sha256_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-hmac-sha256$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_hmac_sha256_OBJECTS) $(unit_test_hmac_sha256_LDADD) $(LIBS)
unit/test-ie.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ie$(EXEEXT): $(unit_test_ie_OBJECTS) $(unit_test_ie_DEPENDENCIES) $(EXTRA_unit_test_ie_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ie$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ie_OBJECTS) $(unit_test_ie_LDADD) $(LIBS)
unit/test-kdf-sha256.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-kdf-sha256$(EXEEXT): $(unit_test_kdf_sha256_OBJECTS) $(unit_test_kdf_sha256_DEPENDENCIES) $(EXTRA_unit_test_kdf_sha256_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-kdf-sha256$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_kdf_sha256_OBJECTS) $(unit_test_kdf_sha256_LDADD) $(LIBS)
unit/test-mpdu.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-mpdu$(EXEEXT): $(unit_test_mpdu_OBJECTS) $(unit_test_mpdu_DEPENDENCIES) $(EXTRA_unit_test_mpdu_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-mpdu$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_mpdu_OBJECTS) $(unit_test_mpdu_LDADD) $(LIBS)
unit/test-prf-sha1.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-prf-sha1$(EXEEXT): $(unit_test_prf_sha1_OBJECTS) $(unit_test_prf_sha1_DEPENDENCIES) $(EXTRA_unit_test_prf_sha1_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-prf-sha1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_prf_sha1_OBJECTS) $(unit_test_prf_sha1_LDADD) $(LIBS)
unit/test-sae.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-sae$(EXEEXT): $(unit_test_sae_OBJECTS) $(unit_test_sae_DEPENDENCIES) $(EXTRA_unit_test_sae_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-sae$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_sae_OBJECTS) $(unit_test_sae_LDADD) $(LIBS)
unit/test-ssid-security.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ssid-security$(EXEEXT): $(unit_test_ssid_security_OBJECTS) $(unit_test_ssid_security_DEPENDENCIES) $(EXTRA_unit_test_ssid_security_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ssid-security$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ssid_security_OBJECTS) $(unit_test_ssid_security_LDADD) $(LIBS)
unit/test-ssid-to-utf8.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ssid-to-utf8$(EXEEXT): $(unit_test_ssid_to_utf8_OBJECTS) $(unit_test_ssid_to_utf8_DEPENDENCIES) $(EXTRA_unit_test_ssid_to_utf8_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ssid-to-utf8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ssid_to_utf8_OBJECTS) $(unit_test_ssid_to_utf8_LDADD) $(LIBS)
unit/test-wsc.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-wsc$(EXEEXT): $(unit_test_wsc_OBJECTS) $(unit_test_wsc_DEPENDENCIES) $(EXTRA_unit_test_wsc_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-wsc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_wsc_OBJECTS) $(unit_test_wsc_LDADD) $(LIBS)
wired/$(am__dirstamp):
	@$(MKDIR_P) wired
	@: > wired/$(am__dirstamp)
wired/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wired/$(DEPDIR)
	@: > wired/$(DEPDIR)/$(am__dirstamp)
wired/main.$(OBJEXT): wired/$(am__dirstamp) \
	wired/$(DEPDIR)/$(am__dirstamp)
wired/ethdev.$(OBJEXT): wired/$(am__dirstamp) \
	wired/$(DEPDIR)/$(am__dirstamp)
wired/network.$(OBJEXT): wired/$(am__dirstamp) \
	wired/$(DEPDIR)/$(am__dirstamp)
wired/dbus.$(OBJEXT): wired/$(am__dirstamp) \
	wired/$(DEPDIR)/$(am__dirstamp)

wired/ead$(EXEEXT): $(wired_ead_OBJECTS) $(wired_ead_DEPENDENCIES) $(EXTRA_wired_ead_DEPENDENCIES) wired/$(am__dirstamp)
	@rm -f wired/ead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wired_ead_OBJECTS) $(wired_ead_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f client/*.$(OBJEXT)
	-rm -f ell/*.$(OBJEXT)
	-rm -f ell/*.lo
	-rm -f monitor/*.$(OBJEXT)
	-rm -f plugins/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)
	-rm -f unit/*.$(OBJEXT)
	-rm -f wired/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include client/$(DEPDIR)/ad-hoc.Po
include client/$(DEPDIR)/adapter.Po
include client/$(DEPDIR)/agent-manager.Po
include client/$(DEPDIR)/agent.Po
include client/$(DEPDIR)/ap.Po
include client/$(DEPDIR)/command.Po
include client/$(DEPDIR)/dbus-proxy.Po
include client/$(DEPDIR)/device.Po
include client/$(DEPDIR)/display.Po
include client/$(DEPDIR)/known-networks.Po
include client/$(DEPDIR)/main.Po
include client/$(DEPDIR)/network.Po
include client/$(DEPDIR)/properties.Po
include client/$(DEPDIR)/station.Po
include client/$(DEPDIR)/wsc.Po
include ell/$(DEPDIR)/base64.Plo
include ell/$(DEPDIR)/cert.Plo
include ell/$(DEPDIR)/checksum.Plo
include ell/$(DEPDIR)/cipher.Plo
include ell/$(DEPDIR)/dbus-client.Plo
include ell/$(DEPDIR)/dbus-filter.Plo
include ell/$(DEPDIR)/dbus-message.Plo
include ell/$(DEPDIR)/dbus-name-cache.Plo
include ell/$(DEPDIR)/dbus-service.Plo
include ell/$(DEPDIR)/dbus-util.Plo
include ell/$(DEPDIR)/dbus.Plo
include ell/$(DEPDIR)/dhcp-lease.Plo
include ell/$(DEPDIR)/dhcp-transport.Plo
include ell/$(DEPDIR)/dhcp.Plo
include ell/$(DEPDIR)/dir.Plo
include ell/$(DEPDIR)/file.Plo
include ell/$(DEPDIR)/genl.Plo
include ell/$(DEPDIR)/gvariant-util.Plo
include ell/$(DEPDIR)/hashmap.Plo
include ell/$(DEPDIR)/hwdb.Plo
include ell/$(DEPDIR)/idle.Plo
include ell/$(DEPDIR)/io.Plo
include ell/$(DEPDIR)/key.Plo
include ell/$(DEPDIR)/log.Plo
include ell/$(DEPDIR)/main.Plo
include ell/$(DEPDIR)/net.Plo
include ell/$(DEPDIR)/netlink.Plo
include ell/$(DEPDIR)/pem.Plo
include ell/$(DEPDIR)/pkcs5.Plo
include ell/$(DEPDIR)/plugin.Plo
include ell/$(DEPDIR)/queue.Plo
include ell/$(DEPDIR)/random.Plo
include ell/$(DEPDIR)/ringbuf.Plo
include ell/$(DEPDIR)/settings.Plo
include ell/$(DEPDIR)/signal.Plo
include ell/$(DEPDIR)/siphash.Plo
include ell/$(DEPDIR)/string.Plo
include ell/$(DEPDIR)/strv.Plo
include ell/$(DEPDIR)/test.Plo
include ell/$(DEPDIR)/timeout.Plo
include ell/$(DEPDIR)/tls-record.Plo
include ell/$(DEPDIR)/tls.Plo
include ell/$(DEPDIR)/uintset.Plo
include ell/$(DEPDIR)/utf8.Plo
include ell/$(DEPDIR)/util.Plo
include ell/$(DEPDIR)/uuid.Plo
include monitor/$(DEPDIR)/display.Po
include monitor/$(DEPDIR)/main.Po
include monitor/$(DEPDIR)/nlmon.Po
include monitor/$(DEPDIR)/pcap.Po
include plugins/$(DEPDIR)/ofono.Po
include plugins/$(DEPDIR)/sim_hardcoded.Po
include src/$(DEPDIR)/adhoc.Po
include src/$(DEPDIR)/agent.Po
include src/$(DEPDIR)/ap.Po
include src/$(DEPDIR)/backtrace.Po
include src/$(DEPDIR)/common.Po
include src/$(DEPDIR)/crypto.Po
include src/$(DEPDIR)/dbus.Po
include src/$(DEPDIR)/device.Po
include src/$(DEPDIR)/eap-aka.Po
include src/$(DEPDIR)/eap-gtc.Po
include src/$(DEPDIR)/eap-md5.Po
include src/$(DEPDIR)/eap-mschapv2.Po
include src/$(DEPDIR)/eap-peap.Po
include src/$(DEPDIR)/eap-pwd.Po
include src/$(DEPDIR)/eap-sim.Po
include src/$(DEPDIR)/eap-tls-common.Po
include src/$(DEPDIR)/eap-tls.Po
include src/$(DEPDIR)/eap-ttls.Po
include src/$(DEPDIR)/eap-wsc.Po
include src/$(DEPDIR)/eap.Po
include src/$(DEPDIR)/eapol.Po
include src/$(DEPDIR)/eapolutil.Po
include src/$(DEPDIR)/ecc.Po
include src/$(DEPDIR)/ecdh.Po
include src/$(DEPDIR)/ftutil.Po
include src/$(DEPDIR)/handshake.Po
include src/$(DEPDIR)/ie.Po
include src/$(DEPDIR)/knownnetworks.Po
include src/$(DEPDIR)/main.Po
include src/$(DEPDIR)/mpdu.Po
include src/$(DEPDIR)/mschaputil.Po
include src/$(DEPDIR)/netdev.Po
include src/$(DEPDIR)/network.Po
include src/$(DEPDIR)/nl80211util.Po
include src/$(DEPDIR)/owe.Po
include src/$(DEPDIR)/plugin.Po
include src/$(DEPDIR)/rfkill.Po
include src/$(DEPDIR)/sae.Po
include src/$(DEPDIR)/scan.Po
include src/$(DEPDIR)/simauth.Po
include src/$(DEPDIR)/simutil.Po
include src/$(DEPDIR)/station.Po
include src/$(DEPDIR)/storage.Po
include src/$(DEPDIR)/util.Po
include src/$(DEPDIR)/watchlist.Po
include src/$(DEPDIR)/wiphy.Po
include src/$(DEPDIR)/wsc.Po
include src/$(DEPDIR)/wscutil.Po
include tools/$(DEPDIR)/hwsim.Po
include tools/$(DEPDIR)/test-runner.Po
include unit/$(DEPDIR)/test-arc4.Po
include unit/$(DEPDIR)/test-client.Po
include unit/$(DEPDIR)/test-cmac-aes.Po
include unit/$(DEPDIR)/test-crypto.Po
include unit/$(DEPDIR)/test-eap-mschapv2.Po
include unit/$(DEPDIR)/test-eap-sim.Po
include unit/$(DEPDIR)/test-eapol.Po
include unit/$(DEPDIR)/test-ecc.Po
include unit/$(DEPDIR)/test-ecdh.Po
include unit/$(DEPDIR)/test-hmac-md5.Po
include unit/$(DEPDIR)/test-hmac-sha1.Po
include unit/$(DEPDIR)/test-hmac-sha256.Po
include unit/$(DEPDIR)/test-ie.Po
include unit/$(DEPDIR)/test-kdf-sha256.Po
include unit/$(DEPDIR)/test-mpdu.Po
include unit/$(DEPDIR)/test-prf-sha1.Po
include unit/$(DEPDIR)/test-sae.Po
include unit/$(DEPDIR)/test-ssid-security.Po
include unit/$(DEPDIR)/test-ssid-to-utf8.Po
include unit/$(DEPDIR)/test-wsc.Po
include wired/$(DEPDIR)/dbus.Po
include wired/$(DEPDIR)/ethdev.Po
include wired/$(DEPDIR)/main.Po
include wired/$(DEPDIR)/network.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf client/.libs client/_libs
	-rm -rf ell/.libs ell/_libs
	-rm -rf monitor/.libs monitor/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf tools/.libs tools/_libs
	-rm -rf unit/.libs unit/_libs
	-rm -rf wired/.libs wired/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-dbus_busDATA: $(dbus_bus_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dbus_bus_DATA)'; test -n "$(dbus_busdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dbus_busdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dbus_busdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dbus_busdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dbus_busdir)" || exit $$?; \
	done

uninstall-dbus_busDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dbus_bus_DATA)'; test -n "$(dbus_busdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dbus_busdir)'; $(am__uninstall_files_from_dir)
install-dist_dbus_dataDATA: $(dist_dbus_data_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dbus_data_DATA)'; test -n "$(dbus_datadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dbus_datadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dbus_datadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dbus_datadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dbus_datadir)" || exit $$?; \
	done

uninstall-dist_dbus_dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dbus_data_DATA)'; test -n "$(dbus_datadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dbus_datadir)'; $(am__uninstall_files_from_dir)
install-systemd_unitDATA: $(systemd_unit_DATA)
	@$(NORMAL_INSTALL)
	@list='$(systemd_unit_DATA)'; test -n "$(systemd_unitdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(systemd_unitdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(systemd_unitdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(systemd_unitdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(systemd_unitdir)" || exit $$?; \
	done

uninstall-systemd_unitDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(systemd_unit_DATA)'; test -n "$(systemd_unitdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(systemd_unitdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
unit/test-cmac-aes.log: unit/test-cmac-aes$(EXEEXT)
	@p='unit/test-cmac-aes$(EXEEXT)'; \
	b='unit/test-cmac-aes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-hmac-md5.log: unit/test-hmac-md5$(EXEEXT)
	@p='unit/test-hmac-md5$(EXEEXT)'; \
	b='unit/test-hmac-md5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-hmac-sha1.log: unit/test-hmac-sha1$(EXEEXT)
	@p='unit/test-hmac-sha1$(EXEEXT)'; \
	b='unit/test-hmac-sha1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-hmac-sha256.log: unit/test-hmac-sha256$(EXEEXT)
	@p='unit/test-hmac-sha256$(EXEEXT)'; \
	b='unit/test-hmac-sha256'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-prf-sha1.log: unit/test-prf-sha1$(EXEEXT)
	@p='unit/test-prf-sha1$(EXEEXT)'; \
	b='unit/test-prf-sha1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-kdf-sha256.log: unit/test-kdf-sha256$(EXEEXT)
	@p='unit/test-kdf-sha256$(EXEEXT)'; \
	b='unit/test-kdf-sha256'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-crypto.log: unit/test-crypto$(EXEEXT)
	@p='unit/test-crypto$(EXEEXT)'; \
	b='unit/test-crypto'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-eapol.log: unit/test-eapol$(EXEEXT)
	@p='unit/test-eapol$(EXEEXT)'; \
	b='unit/test-eapol'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-mpdu.log: unit/test-mpdu$(EXEEXT)
	@p='unit/test-mpdu$(EXEEXT)'; \
	b='unit/test-mpdu'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ie.log: unit/test-ie$(EXEEXT)
	@p='unit/test-ie$(EXEEXT)'; \
	b='unit/test-ie'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ssid-to-utf8.log: unit/test-ssid-to-utf8$(EXEEXT)
	@p='unit/test-ssid-to-utf8$(EXEEXT)'; \
	b='unit/test-ssid-to-utf8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ssid-security.log: unit/test-ssid-security$(EXEEXT)
	@p='unit/test-ssid-security$(EXEEXT)'; \
	b='unit/test-ssid-security'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-arc4.log: unit/test-arc4$(EXEEXT)
	@p='unit/test-arc4$(EXEEXT)'; \
	b='unit/test-arc4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-wsc.log: unit/test-wsc$(EXEEXT)
	@p='unit/test-wsc$(EXEEXT)'; \
	b='unit/test-wsc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-eap-mschapv2.log: unit/test-eap-mschapv2$(EXEEXT)
	@p='unit/test-eap-mschapv2$(EXEEXT)'; \
	b='unit/test-eap-mschapv2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-eap-sim.log: unit/test-eap-sim$(EXEEXT)
	@p='unit/test-eap-sim$(EXEEXT)'; \
	b='unit/test-eap-sim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ecc.log: unit/test-ecc$(EXEEXT)
	@p='unit/test-ecc$(EXEEXT)'; \
	b='unit/test-ecc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-sae.log: unit/test-sae$(EXEEXT)
	@p='unit/test-sae$(EXEEXT)'; \
	b='unit/test-sae'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ecdh.log: unit/test-ecdh$(EXEEXT)
	@p='unit/test-ecdh$(EXEEXT)'; \
	b='unit/test-ecdh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-client.log: unit/test-client$(EXEEXT)
	@p='unit/test-client$(EXEEXT)'; \
	b='unit/test-client'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(dbus_busdir)" "$(DESTDIR)$(dbus_datadir)" "$(DESTDIR)$(systemd_unitdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f client/$(DEPDIR)/$(am__dirstamp)
	-rm -f client/$(am__dirstamp)
	-rm -f ell/$(DEPDIR)/$(am__dirstamp)
	-rm -f ell/$(am__dirstamp)
	-rm -f monitor/$(DEPDIR)/$(am__dirstamp)
	-rm -f monitor/$(am__dirstamp)
	-rm -f plugins/$(DEPDIR)/$(am__dirstamp)
	-rm -f plugins/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)
	-rm -f unit/$(DEPDIR)/$(am__dirstamp)
	-rm -f unit/$(am__dirstamp)
	-rm -f wired/$(DEPDIR)/$(am__dirstamp)
	-rm -f wired/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libexecPROGRAMS \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf client/$(DEPDIR) ell/$(DEPDIR) monitor/$(DEPDIR) plugins/$(DEPDIR) src/$(DEPDIR) tools/$(DEPDIR) unit/$(DEPDIR) wired/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dbus_busDATA install-dist_dbus_dataDATA \
	install-man install-systemd_unitDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libexecPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf client/$(DEPDIR) ell/$(DEPDIR) monitor/$(DEPDIR) plugins/$(DEPDIR) src/$(DEPDIR) tools/$(DEPDIR) unit/$(DEPDIR) wired/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dbus_busDATA \
	uninstall-dist_dbus_dataDATA uninstall-libexecPROGRAMS \
	uninstall-man uninstall-systemd_unitDATA

uninstall-man: uninstall-man1

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	clean-libexecPROGRAMS clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dbus_busDATA install-dist_dbus_dataDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libexecPROGRAMS install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-systemd_unitDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dbus_busDATA \
	uninstall-dist_dbus_dataDATA uninstall-libexecPROGRAMS \
	uninstall-man uninstall-man1 uninstall-systemd_unitDATA

.PRECIOUS: Makefile


ell/internal: Makefile
	$(AM_V_at)$(MKDIR_P) ell
	$(AM_V_GEN)for f in $(ell_headers) $(ell_sources) ; do \
		if [ ! -f $$f ] ; then \
			$(LN_S) -t ell -f $(abs_srcdir)/../ell/$$f ; \
		fi \
	done > $@

ell/ell.h: Makefile
	$(AM_V_at)echo -n > $@
	$(AM_V_GEN)for f in $(ell_headers) ; do \
		echo "#include <$$f>" >> $@ ; \
	done

ell/unit/test_data: Makefile
	$(AM_V_at)$(MKDIR_P) ell/unit
	$(AM_V_GEN)for f in $(ell_pem_files) ; do \
		if [ ! -f $$f ] ; then \
			$(LN_S) -t ell/unit -f $(abs_srcdir)/../ell/unit/$$f ; \
		fi \
	done > $@

%.service: %.service.in Makefile
	$(SED_PROCESS)

%.1: %.txt
	$(AM_V_GEN)$(A2X) --doctype manpage --format manpage $(srcdir)/$<

maintainer-clean-local:
	-rm -rf build-aux ell

src/builtin.h: src/genbuiltin config.status
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_GEN)$(srcdir)/src/genbuiltin $(builtin_modules) > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
